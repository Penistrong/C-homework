课设：写一个贪吃蛇，纯C打造
 游戏思路：
 1.划出游戏范围（四边形空间，有墙壁的定义）
 2.不同的游戏模式（撞墙Game Over or 由另一边穿出），且需判定撞到自己身体会Game Over
 3.随机分配食物的位置，且每吃一个食物蛇的身体会变长一截
 4.响应玩家键盘命令，且蛇在没有指令情况下，会一直向既定的方向移动
 5.考虑到控制台黑白（或默认自带的其他对比色）是极其不佳的视觉体验，还需更改背景地图和蛇的颜色形态
 6.尽量保证屏幕刷新率够高，游戏顺畅
 
 代码初步思路：
 1.地图整体可看做一个个点组成的二维坐标系，使用二维字符数组代表地图，并划定边缘墙壁的坐标值（如果是不同模式例如可从地图另一端穿出则需要重新定义）
 2.将蛇看做一组坐标数组，蛇头的每移动到下一格，下一截身体抵达蛇头原坐标，以此类推。即不断改变蛇的坐标，不断刷新蛇身体（当食物被吃掉时再刷新食物）
   达到移动的效果，且将蛇移动的每一帧都打印出来。
 3.需判定蛇头是否撞到自己身体或者墙壁，只需遍历墙壁坐标及身体坐标判断是否重合即可。
 4.随机生成食物的坐标，不能与墙壁、身体重合，且刷新频率和数量可改变（用以设计游戏难度）。
 5.用direct代表方向，蛇头(动力头)在未读取到从键盘输入的新指令时一直沿该方向移动，读取WASD时还需判断新的移动方向不能跟原移动方向相反。
 6.读取键盘指令引用conio.h(console input/output,控制台输入与输出),并了解键位对应的值（expand：键位）
 7.不需整体刷新，只需对移动的蛇和随机食物进行刷新即可(引用windows.h文件中的一些函数和宏定义，参见Windows API)
 
 游戏多样性和特色（初步想法）：
 i）模式多样性
    1.全部墙围起来or留一些可横跨地图俩侧的地图边界
    2.产生不同效果的食物且BUFF有时间，eg.减分食物（缩小身体）、方向颠倒食物（吃了后方向键控制反向）
